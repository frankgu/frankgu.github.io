<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom"><generator uri="http://jekyllrb.com" version="3.2.1">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2017-05-22T21:55:52-04:00</updated><id>http://localhost:4000/</id><title>Dongfeng Gu</title><subtitle>A blog about technology and stuff related</subtitle><entry><title>使用你的苹果电脑来搭建一个VPN网络</title><link href="http://localhost:4000/setup-vpn/" rel="alternate" type="text/html" title="使用你的苹果电脑来搭建一个VPN网络" /><published>2017-05-22T00:00:00-04:00</published><updated>2017-05-22T00:00:00-04:00</updated><id>http://localhost:4000/setup-vpn</id><content type="html" xml:base="http://localhost:4000/setup-vpn/">&lt;h2 id=&quot;section&quot;&gt;需要准备的东西&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;一台苹果电脑&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://itunes.apple.com/ca/app/macos-server/id883878097?mt=12&quot;&gt;macOS Server&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;能够连上网络的路由器, 并将你的苹果电脑使用网线跟路由器相连接，以达到最高的网络连接速率&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;section-1&quot;&gt;服务器设置步骤&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;在你的苹果电脑中下载&lt;a href=&quot;https://itunes.apple.com/ca/app/macos-server/id883878097?mt=12&quot;&gt;macOS Server&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;注册一个动态的DNS地址
    &lt;ul&gt;
      &lt;li&gt;在&lt;a href=&quot;https://freedns.afraid.org/&quot;&gt;freeDNS&lt;/a&gt;中注册账号并激活邮箱&lt;/li&gt;
      &lt;li&gt;登陆账号之后在左侧的导航栏选择 Dynamic DNS&lt;/li&gt;
      &lt;li&gt;添加一个新的 Dynamic DNS 记录&lt;/li&gt;
      &lt;li&gt;Type: A&lt;/li&gt;
      &lt;li&gt;Subdomain: (任意)&lt;/li&gt;
      &lt;li&gt;Domain: (从列表中任意选择一个)&lt;/li&gt;
      &lt;li&gt;Destination: 自动检测当前的IP地&lt;/li&gt;
      &lt;li&gt;保存设置, 并记录下你填写和选择的域名(Subdomain.Domain)信息&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;在你的路由器当中设置 port forwarding 的信息
    &lt;ul&gt;
      &lt;li&gt;登陆你的路由器(通常为 192.168.0.1 或者 192.168.1.1)，可以在路由器后面的贴纸找到相应的信息，包括账户名跟密码&lt;/li&gt;
      &lt;li&gt;（可选）找到路由器中的DHCP地址池分配的选项，给自己的苹果电脑预约一个静态的地址&lt;/li&gt;
      &lt;li&gt;找到 port forwarding 的选项，添加如下图片中的几条设置，注意IP address的选项需要设置为你当前的苹果电脑的静态地址&lt;/li&gt;
      &lt;li&gt;&lt;img src=&quot;/assets/images/posts/router.png&quot; alt=&quot;img&quot; /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;在苹果电脑中打开&lt;a href=&quot;https://itunes.apple.com/ca/app/macos-server/id883878097?mt=12&quot;&gt;macOS Server&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;选择左侧菜单栏中的第一个选项（电脑名称）&lt;/li&gt;
      &lt;li&gt;点击 Edit Host Name 后选择 Internet 的选项&lt;/li&gt;
      &lt;li&gt;据如下图片设置服务器名字，还有从步骤2中获得的域名的信息&lt;/li&gt;
      &lt;li&gt;&lt;img src=&quot;/assets/images/posts/macos_server.png&quot; alt=&quot;img&quot; /&gt;&lt;/li&gt;
      &lt;li&gt;然后等待软件设置DNS的信息&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;启动VPN
    &lt;ul&gt;
      &lt;li&gt;在左侧菜单栏中选择VPN的选项&lt;/li&gt;
      &lt;li&gt;设置 shared secret 为任意值, 用于其他设备登陆这台苹果电脑的密匙&lt;/li&gt;
      &lt;li&gt;在右上角中开启VPN&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;section-2&quot;&gt;客户端连接注意事项&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;选择 L2TP 的连接方式&lt;/li&gt;
  &lt;li&gt;客户端不可与服务器在同一个局域网内，不然的话会连接不上（这个问题坑苦我了）&lt;/li&gt;
  &lt;li&gt;登陆的账户是你服务器苹果电脑的用户&lt;/li&gt;
  &lt;li&gt;shared secret 是上述步骤五中你填写的值&lt;/li&gt;
&lt;/ol&gt;</content><author><name>gdf</name></author><category term="vpn" /><category term="macos server" /><summary>需要准备的东西</summary></entry><entry><title>Tensorflow: C3D for action detection</title><link href="http://localhost:4000/C3D/" rel="alternate" type="text/html" title="Tensorflow: C3D for action detection" /><published>2017-04-10T00:00:00-04:00</published><updated>2017-04-10T00:00:00-04:00</updated><id>http://localhost:4000/C3D</id><content type="html" xml:base="http://localhost:4000/C3D/">&lt;h1 id=&quot;github&quot;&gt;Github&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/frankgu/C3D-tensorflow&quot;&gt;link&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;project-readme&quot;&gt;Project ReadMe&lt;/h1&gt;

&lt;h2 id=&quot;c3d-tensorflow&quot;&gt;C3D-tensorflow&lt;/h2&gt;

&lt;h3 id=&quot;repeat-the-experiment-result&quot;&gt;Repeat the experiment result:&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Install the following two python libs:&lt;/p&gt;

    &lt;p&gt;a) &lt;a href=&quot;https://www.tensorflow.org/&quot;&gt;tensorflow&lt;/a&gt;(version r1.0)&lt;/p&gt;

    &lt;p&gt;b) &lt;a href=&quot;http://pillow.readthedocs.io/en/3.1.x/reference/Image.html&quot;&gt;Pillow&lt;/a&gt;&lt;/p&gt;

    &lt;p&gt;c) &lt;a href=&quot;http://opencv.org/&quot;&gt;Opencv&lt;/a&gt;&lt;/p&gt;

    &lt;p&gt;d) &lt;a href=&quot;http://scikit-learn.org/stable/install.html&quot;&gt;sklearn&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Download the &lt;a href=&quot;http://crcv.ucf.edu/data/UCF101/UCF101.rar&quot;&gt;UCF101&lt;/a&gt; (Action Recognition Data Set)&lt;/li&gt;
  &lt;li&gt;Extract the &lt;code class=&quot;highlighter-rouge&quot;&gt;UCF101.rar&lt;/code&gt; file and you will get &lt;code class=&quot;highlighter-rouge&quot;&gt;UCF101/{action_name}/{video.avi}&lt;/code&gt; folder structure&lt;/li&gt;
  &lt;li&gt;Use the &lt;code class=&quot;highlighter-rouge&quot;&gt;./list/convert_video_to_images.sh&lt;/code&gt; script to decode the ucf101 video files (from video to images)
    &lt;ul&gt;
      &lt;li&gt;run &lt;code class=&quot;highlighter-rouge&quot;&gt;./list/convert_video_to_images.sh .../UCF101 5&lt;/code&gt; (number &lt;code class=&quot;highlighter-rouge&quot;&gt;5&lt;/code&gt; means the fps rate)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Create the &lt;code class=&quot;highlighter-rouge&quot;&gt;train.list&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;test.list&lt;/code&gt; files in &lt;code class=&quot;highlighter-rouge&quot;&gt;list&lt;/code&gt; directory.&lt;/li&gt;
  &lt;li&gt;Use the &lt;code class=&quot;highlighter-rouge&quot;&gt;./list/convert_images_to_list.sh&lt;/code&gt; script to update the &lt;code class=&quot;highlighter-rouge&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;train,test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;.list&lt;/span&gt;&lt;/code&gt; according to the &lt;code class=&quot;highlighter-rouge&quot;&gt;UCF101&lt;/code&gt; folder structure (from images to files)
    &lt;ul&gt;
      &lt;li&gt;run &lt;code class=&quot;highlighter-rouge&quot;&gt;./list/convert_images_to_list.sh .../UCF101 4&lt;/code&gt;, this will update the &lt;code class=&quot;highlighter-rouge&quot;&gt;test.list&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;train.list&lt;/code&gt; files (number &lt;code class=&quot;highlighter-rouge&quot;&gt;4&lt;/code&gt; means the ratio of test and train data is 1/4)&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;
 database/ucf101/train/ApplyEyeMakeup/v_ApplyEyeMakeup_g01_c01 0
 database/ucf101/train/ApplyEyeMakeup/v_ApplyEyeMakeup_g01_c02 0
 database/ucf101/train/ApplyEyeMakeup/v_ApplyEyeMakeup_g01_c03 0
 database/ucf101/train/ApplyLipstick/v_ApplyLipstick_g01_c01 1
 database/ucf101/train/ApplyLipstick/v_ApplyLipstick_g01_c02 1
 database/ucf101/train/ApplyLipstick/v_ApplyLipstick_g01_c03 1
 database/ucf101/train/Archery/v_Archery_g01_c01 2
 database/ucf101/train/Archery/v_Archery_g01_c02 2
 database/ucf101/train/Archery/v_Archery_g01_c03 2
 database/ucf101/train/Archery/v_Archery_g01_c04 2
 database/ucf101/train/BabyCrawling/v_BabyCrawling_g01_c01 3
 database/ucf101/train/BabyCrawling/v_BabyCrawling_g01_c02 3
 database/ucf101/train/BabyCrawling/v_BabyCrawling_g01_c03 3
 database/ucf101/train/BabyCrawling/v_BabyCrawling_g01_c04 3
 database/ucf101/train/BalanceBeam/v_BalanceBeam_g01_c01 4
 database/ucf101/train/BalanceBeam/v_BalanceBeam_g01_c02 4
 database/ucf101/train/BalanceBeam/v_BalanceBeam_g01_c03 4
 database/ucf101/train/BalanceBeam/v_BalanceBeam_g01_c04 4
 ...
&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Run the training program &lt;code class=&quot;highlighter-rouge&quot;&gt;python train_c3d.py&lt;/code&gt; (you can pause or stop the training procedure and resume the training by runing this command again)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Evaluate the result &lt;code class=&quot;highlighter-rouge&quot;&gt;python eval_c3d.py&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;options&quot;&gt;Options&lt;/h3&gt;

&lt;h4 id=&quot;use-the-pretrained-model&quot;&gt;Use the pretrained model&lt;/h4&gt;
&lt;p&gt;If you want to test the pre-trained model (sports1m), you need to download the model from here: https://www.dropbox.com/sh/8wcjrcadx4r31ux/AAAkz3dQ706pPO8ZavrztRCca?dl=0 and move the file &lt;code class=&quot;highlighter-rouge&quot;&gt;sports1m_finetuning_ucf101.model&lt;/code&gt; to the &lt;code class=&quot;highlighter-rouge&quot;&gt;root&lt;/code&gt; folder&lt;/p&gt;

&lt;h4 id=&quot;use-other-dataset-than-ucf101&quot;&gt;Use other dataset than UCF101&lt;/h4&gt;
&lt;ol&gt;
  &lt;li&gt;Modify the &lt;code class=&quot;highlighter-rouge&quot;&gt;NUM_CLASSES&lt;/code&gt; variable in the &lt;code class=&quot;highlighter-rouge&quot;&gt;c3d_model.py&lt;/code&gt; file&lt;/li&gt;
  &lt;li&gt;Change the &lt;code class=&quot;highlighter-rouge&quot;&gt;NUM_EXAMPLES_PER_EPOCH_FOR_TRAIN&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;NUM_EXAMPLES_PER_EPOCH_FOR_EVAL&lt;/code&gt; variables in the &lt;code class=&quot;highlighter-rouge&quot;&gt;c3d_model.py&lt;/code&gt; file
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;NUM_EXAMPLES_PER_EPOCH_FOR_TRAIN&lt;/code&gt; = (total number of training image)/&lt;code class=&quot;highlighter-rouge&quot;&gt;NUM_FRAMES_PER_CLIP&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;NUM_EXAMPLES_PER_EPOCH_FOR_EVAL&lt;/code&gt; = (total number of evaluating image)/&lt;code class=&quot;highlighter-rouge&quot;&gt;NUM_FRAMES_PER_CLIP&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;NUM_FRAMES_PER_CLIP&lt;/code&gt; is in the &lt;code class=&quot;highlighter-rouge&quot;&gt;c3d_model.py&lt;/code&gt; file&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;use-svm-as-classifier&quot;&gt;Use SVM as Classifier&lt;/h4&gt;
&lt;ol&gt;
  &lt;li&gt;Required: You need to train the database using &lt;code class=&quot;highlighter-rouge&quot;&gt;train_c3d.py&lt;/code&gt; file and get the checkout model&lt;/li&gt;
  &lt;li&gt;Run the &lt;code class=&quot;highlighter-rouge&quot;&gt;train_svm.py&lt;/code&gt; file to extract the &lt;code class=&quot;highlighter-rouge&quot;&gt;fc6&lt;/code&gt; features according to the pretrained C3D model and then train the svm model and save the model &lt;code class=&quot;highlighter-rouge&quot;&gt;svm.model&lt;/code&gt; in the result folder&lt;/li&gt;
  &lt;li&gt;Evaluate the svm model by running the file &lt;code class=&quot;highlighter-rouge&quot;&gt;eval_svm.py&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;experiment-result&quot;&gt;Experiment result:&lt;/h3&gt;

&lt;p&gt;Top-1 accuracy of 80% should be achieved for the validation dataset with this code&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/ucf101_result.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;references&quot;&gt;References:&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Thanks the author &lt;a href=&quot;https://github.com/dutran&quot;&gt;Du tran&lt;/a&gt;’s code: &lt;a href=&quot;https://github.com/facebook/C3D&quot;&gt;C3D-caffe&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://vlg.cs.dartmouth.edu/c3d/&quot;&gt;C3D: Generic Features for Video Analysis&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/frankgu&quot;&gt;frankgu&lt;/a&gt;’s contribution&lt;/li&gt;
&lt;/ul&gt;</content><author><name>gdf</name></author><category term="tensorflow" /><category term="c3d" /><category term="cnn" /><category term="python" /><summary>Github</summary></entry><entry><title>Tensorflow: 3D-DenseNet for action detection</title><link href="http://localhost:4000/3D-DenseNet/" rel="alternate" type="text/html" title="Tensorflow: 3D-DenseNet for action detection" /><published>2017-04-10T00:00:00-04:00</published><updated>2017-04-10T00:00:00-04:00</updated><id>http://localhost:4000/3D-DenseNet</id><content type="html" xml:base="http://localhost:4000/3D-DenseNet/">&lt;h1 id=&quot;github&quot;&gt;Github&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/frankgu/3d-DenseNet&quot;&gt;link&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;project-readme&quot;&gt;Project ReadMe&lt;/h1&gt;

&lt;h2 id=&quot;d-densenet-with-tensorflow&quot;&gt;3D-DenseNet with TensorFlow&lt;/h2&gt;

&lt;p&gt;Two types of `Densely Connected Convolutional Networks &lt;a href=&quot;https://arxiv.org/abs/1608.06993&quot;&gt;DenseNets&lt;/a&gt; are available:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;DenseNet - without bottleneck layers&lt;/li&gt;
  &lt;li&gt;DenseNet-BC - with bottleneck layers&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Each model can be tested on such datasets:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://crcv.ucf.edu/data/UCF101/UCF101.rar&quot;&gt;UCF101&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.merl.com/demos/merl-shopping-dataset&quot;&gt;MERL&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;A number of layers, blocks, growth rate, video normalization and other training params may be changed trough shell or inside the source code.&lt;/p&gt;

&lt;p&gt;There are also many &lt;a href=&quot;https://github.com/liuzhuang13/DenseNet&quot;&gt;other implementations&lt;/a&gt; they may be useful also.&lt;/p&gt;

&lt;p&gt;Citation for DenseNet:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; @article{Huang2016Densely,
        author = {Huang, Gao and Liu, Zhuang and Weinberger, Kilian Q.},
        title = {Densely Connected Convolutional Networks},
        journal = {arXiv preprint arXiv:1608.06993},
        year = {2016}
 }
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;step-1-data-preparation&quot;&gt;Step 1: Data preparation&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;Download the &lt;a href=&quot;http://crcv.ucf.edu/data/UCF101/UCF101.rar&quot;&gt;UCF101&lt;/a&gt; (Action Recognition Data Set).&lt;/li&gt;
  &lt;li&gt;Extract the &lt;code class=&quot;highlighter-rouge&quot;&gt;UCF101.rar&lt;/code&gt; file and you will get &lt;code class=&quot;highlighter-rouge&quot;&gt;UCF101/&amp;lt;action_name&amp;gt;/&amp;lt;video_name.avi&amp;gt;&lt;/code&gt; folder structure.&lt;/li&gt;
  &lt;li&gt;Use the &lt;code class=&quot;highlighter-rouge&quot;&gt;./data_prepare/convert_video_to_images.sh&lt;/code&gt; script to decode the &lt;code class=&quot;highlighter-rouge&quot;&gt;UCF101&lt;/code&gt; video files to image files.
    &lt;ul&gt;
      &lt;li&gt;run &lt;code class=&quot;highlighter-rouge&quot;&gt;./data_prepare/convert_video_to_images.sh ../UCF101 5&lt;/code&gt; (number &lt;code class=&quot;highlighter-rouge&quot;&gt;5&lt;/code&gt; means the fps rate)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Use the &lt;code class=&quot;highlighter-rouge&quot;&gt;./data_prepare/convert_images_to_list.sh&lt;/code&gt; script to create/update the &lt;code class=&quot;highlighter-rouge&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;train,test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;.list&lt;/span&gt;&lt;/code&gt; according to the new &lt;code class=&quot;highlighter-rouge&quot;&gt;UCF101&lt;/code&gt; image folder structure generated from last step (from images to files).
    &lt;ul&gt;
      &lt;li&gt;run &lt;code class=&quot;highlighter-rouge&quot;&gt;./data_prepare/convert_images_to_list.sh .../UCF101 4&lt;/code&gt;, this will update the &lt;code class=&quot;highlighter-rouge&quot;&gt;test.list&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;train.list&lt;/code&gt; files (number &lt;code class=&quot;highlighter-rouge&quot;&gt;4&lt;/code&gt; means the ratio of test and train data is 1/4)&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;train.list&lt;/code&gt;:
  &lt;code class=&quot;highlighter-rouge&quot;&gt;
  database/ucf101/train/ApplyEyeMakeup/v_ApplyEyeMakeup_g01_c01 0
  database/ucf101/train/ApplyEyeMakeup/v_ApplyEyeMakeup_g01_c02 0
  database/ucf101/train/ApplyEyeMakeup/v_ApplyEyeMakeup_g01_c03 0
  database/ucf101/train/ApplyLipstick/v_ApplyLipstick_g01_c01 1
  database/ucf101/train/ApplyLipstick/v_ApplyLipstick_g01_c02 1
  database/ucf101/train/ApplyLipstick/v_ApplyLipstick_g01_c03 1
  database/ucf101/train/Archery/v_Archery_g01_c01 2
  database/ucf101/train/Archery/v_Archery_g01_c02 2
  database/ucf101/train/Archery/v_Archery_g01_c03 2
  database/ucf101/train/Archery/v_Archery_g01_c04 2
  database/ucf101/train/BabyCrawling/v_BabyCrawling_g01_c01 3
  database/ucf101/train/BabyCrawling/v_BabyCrawling_g01_c02 3
  database/ucf101/train/BabyCrawling/v_BabyCrawling_g01_c03 3
  database/ucf101/train/BabyCrawling/v_BabyCrawling_g01_c04 3
  database/ucf101/train/BalanceBeam/v_BalanceBeam_g01_c01 4
  database/ucf101/train/BalanceBeam/v_BalanceBeam_g01_c02 4
  database/ucf101/train/BalanceBeam/v_BalanceBeam_g01_c03 4
  database/ucf101/train/BalanceBeam/v_BalanceBeam_g01_c04 4
  ...
 &lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Copy/Cut the &lt;code class=&quot;highlighter-rouge&quot;&gt;test.list&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;train.list&lt;/code&gt; files to the &lt;code class=&quot;highlighter-rouge&quot;&gt;data_providers&lt;/code&gt; folders.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;step-2-train-or-test-the-model&quot;&gt;Step 2: Train or Test the model&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Train the program&lt;/p&gt;

    &lt;p&gt;python run_dense_net_3d.py –train –test –dataset=MERL&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Check parameter help message&lt;/p&gt;

    &lt;p&gt;python run_dense_net_3d.py –help&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;options&quot;&gt;Options&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;run_dense_net_3d.py&lt;/code&gt; -&amp;gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;train_params_&amp;lt;dataset&amp;gt;&lt;/code&gt; settings
  &lt;code class=&quot;highlighter-rouge&quot;&gt;
  'num_classes': 5,               # The number of the classes that this dataset had
  'batch_size': 10,               # Batch Size When we trian the model
  'n_epochs': 100,                # The total number of epoch we run the model
  'crop_size': 64,                # The weight and length of images that we used to trian the model
  'sequence_length': 16,          # The length of the video clip
  'overlap_length': 8,            # The overlap of the images when we extract the video clips,
                                    this should be less than sequence_length
  'initial_learning_rate': 0.1,
  'reduce_lr_epoch_1': 50,        # epochs * 0.5
  'reduce_lr_epoch_2': 75,        # epochs * 0.75
  'validation_set': True,         # Whether used validation set or not
  'validation_split': None,       # None or float
  'shuffle': True,                # None, once_prior_train, every_epoch
  'normalization': 'by_channels', # None, divide_256, divide_255, by_channels
 &lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;result&quot;&gt;Result&lt;/h3&gt;

&lt;p&gt;Test results on MERL dataset. Video normalization per channels was used.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Model type&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Depth&lt;/th&gt;
      &lt;th style=&quot;text-align: right&quot;&gt;MERL&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;DenseNet(&lt;em&gt;k&lt;/em&gt; = 12)&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;20&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;70%&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Approximate training time for models on GeForce GTX TITAN X (12 GB memory):&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;DenseNet(&lt;em&gt;k&lt;/em&gt; = 12, &lt;em&gt;d&lt;/em&gt; = 20) - 25 hrs&lt;/li&gt;
  &lt;li&gt;DenseNet-BC(&lt;em&gt;k&lt;/em&gt; = 12, &lt;em&gt;d&lt;/em&gt; = 100) - 1 day 18 hrs&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;dependencies&quot;&gt;Dependencies&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Model was tested with Python 3.4.3+ and Python 3.5.2 with and without CUDA.&lt;/li&gt;
  &lt;li&gt;Model should work as expected with TensorFlow &amp;gt;= 0.10. Tensorflow 1.0 support was included.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Repo supported with requirements file - so the easiest way to install all just run &lt;code class=&quot;highlighter-rouge&quot;&gt;pip install -r requirements.txt&lt;/code&gt;.&lt;/p&gt;</content><author><name>gdf</name></author><category term="tensorflow" /><category term="densenet" /><category term="cnn" /><category term="python" /><summary>Github</summary></entry><entry><title>Setup reactjs for web development</title><link href="http://localhost:4000/setup-react/" rel="alternate" type="text/html" title="Setup reactjs for web development" /><published>2016-12-06T00:00:00-05:00</published><updated>2016-12-06T00:00:00-05:00</updated><id>http://localhost:4000/setup-react</id><content type="html" xml:base="http://localhost:4000/setup-react/">&lt;h1 id=&quot;essential-npm-packages&quot;&gt;Essential NPM Packages&lt;/h1&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;name&lt;/th&gt;
      &lt;th&gt;functions&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;http://browserify.org/&quot;&gt;Browserify&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Allows the browser to use NPM modules&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;http://babeljs.io/&quot;&gt;Babel&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Compiles ES6/JSX into browser-readable Javascript&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://babeljs.io/docs/plugins/preset-react/&quot;&gt;Babel-React-Preset&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Tells Babel how to compile JSX&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/babel/babelify&quot;&gt;Babelify&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Allows you to use Babel with Browserify&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/substack/watchify&quot;&gt;Watchify&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Watches for changes and instantly starts compiling&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h1 id=&quot;create-the-react-skeleton-project&quot;&gt;Create the react skeleton project&lt;/h1&gt;

&lt;ol&gt;
  &lt;li&gt;create a folder name &lt;code class=&quot;highlighter-rouge&quot;&gt;react-skeleton&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;cd&lt;/code&gt; into the &lt;code class=&quot;highlighter-rouge&quot;&gt;react-skeleton&lt;/code&gt; folder&lt;/li&gt;
  &lt;li&gt;create &lt;code class=&quot;highlighter-rouge&quot;&gt;public&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;src&lt;/code&gt; folders&lt;/li&gt;
  &lt;li&gt;run &lt;code class=&quot;highlighter-rouge&quot;&gt;git init&lt;/code&gt; and push your project to github&lt;/li&gt;
  &lt;li&gt;run &lt;code class=&quot;highlighter-rouge&quot;&gt;npm init&lt;/code&gt; to initilize the &lt;code class=&quot;highlighter-rouge&quot;&gt;package.json&lt;/code&gt; file (indicate that this project is a node project)&lt;/li&gt;
  &lt;li&gt;install the essential npm packages
    &lt;ul&gt;
      &lt;li&gt;npm install -g browserify&lt;/li&gt;
      &lt;li&gt;npm install –save babelify&lt;/li&gt;
      &lt;li&gt;npm install –save watchify&lt;/li&gt;
      &lt;li&gt;npm install –save babel-preset-react&lt;/li&gt;
      &lt;li&gt;npm install –save react&lt;/li&gt;
      &lt;li&gt;npm install –save react-dom&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;create a &lt;code class=&quot;highlighter-rouge&quot;&gt;components&lt;/code&gt; folder inside &lt;code class=&quot;highlighter-rouge&quot;&gt;src&lt;/code&gt; folder&lt;/li&gt;
  &lt;li&gt;create file &lt;code class=&quot;highlighter-rouge&quot;&gt;src/main.jsx&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;create file &lt;code class=&quot;highlighter-rouge&quot;&gt;src/components/List.jsx&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;create file &lt;code class=&quot;highlighter-rouge&quot;&gt;src/components/ListItem.jsx&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;create a &lt;code class=&quot;highlighter-rouge&quot;&gt;js&lt;/code&gt; folder inside &lt;code class=&quot;highlighter-rouge&quot;&gt;public&lt;/code&gt; folder&lt;/li&gt;
  &lt;li&gt;create file &lt;code class=&quot;highlighter-rouge&quot;&gt;public/js/main.js&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Project &lt;a href=&quot;https://github.com/devslopes/react-skeleton&quot;&gt;Link&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;use-bootstrap3x-and-jquery-for-styling&quot;&gt;Use Bootstrap(3.X) and Jquery for styling&lt;/h1&gt;

&lt;ol&gt;
  &lt;li&gt;add &lt;a href=&quot;http://getbootstrap.com/getting-started/#download&quot;&gt;Bootstrap&lt;/a&gt; content delivery network (CDN) to html file&lt;/li&gt;
  &lt;li&gt;add &lt;a href=&quot;https://code.jquery.com/&quot;&gt;Jquery&lt;/a&gt; CDN to html file&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;example html:&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- Latest compiled and minified CSS --&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;stylesheet&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;integrity=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;crossorigin=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;anonymous&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- Optional theme --&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;stylesheet&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap-theme.min.css&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;integrity=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;sha384-rHyoN1iRsVXV4nD0JutlnGaslCJuC7uwjduW9SVrLvRYooPp2bWYgmgJQIXwl/Sp&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;crossorigin=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;anonymous&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;button&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;btn btn-primary&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Click Me!&lt;span class=&quot;nt&quot;&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://code.jquery.com/jquery-3.1.1.min.js&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;integrity=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;sha256-hVVnYaiADRTO2PzUGmuLJr8BLUSjGIZsDYGmIJLv2b8=&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;crossorigin=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;anonymous&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- Latest compiled and minified JavaScript --&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;integrity=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;sha384-Tc5IQib027qvyjSMfHjOMaLkfuWVxZxUPnCJA7l2mCWNIpG9mGCD8wGNIcPD7Txa&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;crossorigin=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;anonymous&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h1 id=&quot;chrome-developer-tool-setting&quot;&gt;Chrome developer tool setting&lt;/h1&gt;
&lt;ol&gt;
  &lt;li&gt;search &lt;a href=&quot;https://chrome.google.com/webstore/detail/react-developer-tools/fmkadmapgofadopljbjfkapdkoienihi&quot;&gt;React Developer Tools&lt;/a&gt; on Chrome web store&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;enable the &lt;code class=&quot;highlighter-rouge&quot;&gt;Allow in incognito&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;Allow access to file URLs&lt;/code&gt; options of this tool inside the chrome extensions manager&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/images/posts/react-chrome-tool.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;intall the http-server globally&lt;/p&gt;

    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;npm install -g http-server&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;run &lt;code class=&quot;highlighter-rouge&quot;&gt;http-server&lt;/code&gt; command on you react project folder (make sure that you project folder has public subfolder) and navigate to &lt;a href=&quot;http://127.0.0.1:8080/&quot;&gt;http://127.0.0.1:8080/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;debug your react program by navigating to react debugger&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/images/posts/react-debug-chrome.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;</content><author><name>gdf</name></author><category term="reactjs" /><category term="javascript" /><category term="bootstrap" /><summary>Essential NPM Packages</summary></entry><entry><title>Resources for building a rails api-only application</title><link href="http://localhost:4000/build-rails-api-only-application/" rel="alternate" type="text/html" title="Resources for building a rails api-only application" /><published>2016-11-26T00:00:00-05:00</published><updated>2016-11-26T00:00:00-05:00</updated><id>http://localhost:4000/build-rails-api-only-application</id><content type="html" xml:base="http://localhost:4000/build-rails-api-only-application/">&lt;h1 id=&quot;useful-resources&quot;&gt;Useful resources&lt;/h1&gt;

&lt;h2 id=&quot;tutorials&quot;&gt;Tutorials&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Rails official tutorial : &lt;a href=&quot;http://edgeguides.rubyonrails.org/api_app.html&quot;&gt;using rails for API-only Applications&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Transfer the ruby on rails project to API-Only project : &lt;a href=&quot;https://hashrocket.com/blog/posts/how-to-make-rails-5-api-only&quot;&gt;How to Make a Rails 5 App API-Only&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://sourcey.com/building-the-prefect-rails-5-api-only-app/&quot;&gt;Building the Perfect Rails 5 API Only App&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;gems&quot;&gt;Gems&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;gem&lt;/th&gt;
      &lt;th&gt;explanation&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/cyu/rack-cors&quot;&gt;rake-cors&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;The cross-origin HTTP request, allows web applications to make cross domain AJAX calls without using workarounds such as JSONP&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/Apipie/apipie-rails&quot;&gt;apipie-rails&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Apipie-rails is a DSL and Rails engine for documenting your RESTful API&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/thoughtbot/factory_girl_rails&quot;&gt;factory_girl_rails&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;factory_girl is a fixtures replacement with a straightforward definition syntax, support for multiple build strategies (saved instances, unsaved instances, attribute hashes, and stubbed objects), and support for multiple factories for the same class (user, admin_user, and so on), including factory inheritance.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/voormedia/rails-erd&quot;&gt;rails-erd&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Generate a diagram based on your application’s Active Record models&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/rails-api/active_model_serializers&quot;&gt;active_model_serializers&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;ActiveModelSerializers brings convention over configuration to your JSON generation.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;</content><author><name>gdf</name></author><category term="rails" /><category term="ruby" /><summary>Useful resources</summary></entry><entry><title>Tensorflow: Rcnn for action detection</title><link href="http://localhost:4000/rcnn-action-detection/" rel="alternate" type="text/html" title="Tensorflow: Rcnn for action detection" /><published>2016-11-04T00:00:00-04:00</published><updated>2016-11-04T00:00:00-04:00</updated><id>http://localhost:4000/rcnn-action-detection</id><content type="html" xml:base="http://localhost:4000/rcnn-action-detection/">&lt;h1 id=&quot;github&quot;&gt;Github&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/frankgu/tensorflow_video_classification_LSTM&quot;&gt;link&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;network-structure&quot;&gt;Network structure&lt;/h1&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/projects/rcnn.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;</content><author><name>gdf</name></author><category term="tensorflow" /><category term="lstm" /><category term="rnn" /><category term="python" /><category term="cnn" /><summary>Github</summary></entry><entry><title>Wechat: devise authentication framework</title><link href="http://localhost:4000/rails-devise-framework/" rel="alternate" type="text/html" title="Wechat: devise authentication framework" /><published>2016-10-30T00:00:00-04:00</published><updated>2016-10-30T00:00:00-04:00</updated><id>http://localhost:4000/rails-devise-framework</id><content type="html" xml:base="http://localhost:4000/rails-devise-framework/">&lt;h1 id=&quot;github&quot;&gt;Github&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/frankgu/rails_authentication_system&quot;&gt;link&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;pictures&quot;&gt;Pictures&lt;/h1&gt;

&lt;p&gt;(from left to right and top to down)&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;img src=&quot;/assets/images/projects/rails-auth.png&quot; alt=&quot;figure&quot; /&gt;&lt;/td&gt;
      &lt;td&gt;&lt;img src=&quot;/assets/images/projects/rails-auth2.png&quot; alt=&quot;figure&quot; /&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;img src=&quot;/assets/images/projects/rails-auth3.png&quot; alt=&quot;figure&quot; /&gt;&lt;/td&gt;
      &lt;td&gt;&lt;img src=&quot;/assets/images/projects/rails-auth4.png&quot; alt=&quot;figure&quot; /&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;img src=&quot;/assets/images/projects/rails-auth5.png&quot; alt=&quot;figure&quot; /&gt;&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;</content><author><name>gdf</name></author><category term="wechat" /><category term="devise" /><category term="rails" /><category term="ruby" /><summary>Github</summary></entry><entry><title>【译】Rails 用户认证(Authen)</title><link href="http://localhost:4000/rails-auth/" rel="alternate" type="text/html" title="【译】Rails 用户认证(Authen)" /><published>2016-10-23T00:00:00-04:00</published><updated>2016-10-23T00:00:00-04:00</updated><id>http://localhost:4000/rails-auth</id><content type="html" xml:base="http://localhost:4000/rails-auth/">&lt;h2 id=&quot;section&quot;&gt;参考链接&lt;/h2&gt;
&lt;p&gt;原文&lt;a href=&quot;https://rails.devcamp.com/professional-rails-development-course/application-build/rails-authentication&quot;&gt;链接&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;section-1&quot;&gt;文章正文&lt;/h2&gt;

&lt;h3 id=&quot;authentication&quot;&gt;为什么要从用户认证（Authentication）开始&lt;/h3&gt;

&lt;p&gt;当我们决定先创建什么功能的时候，一个重要的依据就是功能之间的依赖性（dependencies）。依赖性的意思就是指不同功能之间的需求程度。功能A的依赖性高就是指有很多其他的功能需要这个功能A。下面让我们看一看我们所创建的需求表：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/posts/functional_requirements.png&quot; alt=&quot;functional requirements&quot; /&gt;&lt;/p&gt;

&lt;p&gt;仔细阅读需求表，你将会发现几乎有一半的需求都跟&lt;code class=&quot;highlighter-rouge&quot;&gt;User&lt;/code&gt;有关，所以我们将会从&lt;code class=&quot;highlighter-rouge&quot;&gt;User&lt;/code&gt;的功能开始。如果你从其他的功能（比如&lt;code class=&quot;highlighter-rouge&quot;&gt;Post&lt;/code&gt;）开始，那么我们将会需要在实现&lt;code class=&quot;highlighter-rouge&quot;&gt;User&lt;/code&gt;的功能的时候回到&lt;code class=&quot;highlighter-rouge&quot;&gt;Post&lt;/code&gt;当中来重构&lt;code class=&quot;highlighter-rouge&quot;&gt;Post&lt;/code&gt;的代码。&lt;/p&gt;

&lt;p&gt;从另一个方面来看，当我们查看数据库的&lt;code class=&quot;highlighter-rouge&quot;&gt;schema.rb&lt;/code&gt;文件时，我们将会发现数据库中有许多其他的表单将&lt;code class=&quot;highlighter-rouge&quot;&gt;user_id&lt;/code&gt;设为了外键（foreign key）。这是一个非常好的信号用来表示&lt;code class=&quot;highlighter-rouge&quot;&gt;User&lt;/code&gt;这个表的依赖程度。所以说我们将会首先开始来创建&lt;code class=&quot;highlighter-rouge&quot;&gt;User&lt;/code&gt;模型。&lt;/p&gt;

&lt;h3 id=&quot;devisehttpsgithubcomplataformatecdevise&quot;&gt;使用&lt;a href=&quot;https://github.com/plataformatec/devise&quot;&gt;Devise&lt;/a&gt;还是从头开始创建用户认证系统&lt;/h3&gt;

&lt;p&gt;我编写过很长一段时间的程序。到目前为止，只有两个应用程序我是从头开始创建用户认证系统而不是使用现有的用户认证系统库，类似于&lt;code class=&quot;highlighter-rouge&quot;&gt;Deivse&lt;/code&gt;。而且这两个例外的应用程序还是因为它有特定的需求，需要集成微软的&lt;code class=&quot;highlighter-rouge&quot;&gt;ActiveDirectory&lt;/code&gt;认证引擎，所以才我从头创建用户的认证系统。&lt;/p&gt;

&lt;p&gt;我个人的观点认为我们应该使用像&lt;code class=&quot;highlighter-rouge&quot;&gt;Devise&lt;/code&gt;这样，经过充分测试并且会有人员长期维护的库来创建一些功能，而不是从头开始创建。在接下来的教程当中，我将会介绍如何集成&lt;code class=&quot;highlighter-rouge&quot;&gt;Devise&lt;/code&gt;的每一个步骤，但我并不会介绍&lt;code class=&quot;highlighter-rouge&quot;&gt;Devise&lt;/code&gt;这个&lt;code class=&quot;highlighter-rouge&quot;&gt;gem&lt;/code&gt;本身的内容，我已经写过一篇博客&lt;a href=&quot;http://blog.gdf.name/devise-usage/&quot;&gt;Devise的用法&lt;/a&gt;用来介绍有关&lt;code class=&quot;highlighter-rouge&quot;&gt;Devise&lt;/code&gt;本身的内容，读者可以点进链接进行参。&lt;/p&gt;

&lt;h3 id=&quot;section-2&quot;&gt;实现用户认证&lt;/h3&gt;

&lt;p&gt;我们本来可以从创建模型的&lt;code class=&quot;highlighter-rouge&quot;&gt;spec&lt;/code&gt;测试开始，但是我并不想给一些已经做过充分测试的功能再写一些重复的测试。&lt;code class=&quot;highlighter-rouge&quot;&gt;Devise&lt;/code&gt;已经有一个非常详细与综合的测试系统，你可以查看测试&lt;a href=&quot;https://github.com/plataformatec/devise/tree/master/test&quot;&gt;链接&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;在我们创建新的功能之间，有一个很重要的地方需要注意的就是，我们不能在&lt;code class=&quot;highlighter-rouge&quot;&gt;mater&lt;/code&gt;分支上面直接修改代码，我们需要首先创建一个新的分支：&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git checkout -b add-auth
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;将我们正在做的工作与&lt;code class=&quot;highlighter-rouge&quot;&gt;master&lt;/code&gt;分支区分开来将是非常重要的，因为这样可以解决如下这种情况，当我们正在工作的时候，我们突然有另外一个非常紧急的功能需要实现，比如说修复一个错误，如果说我并没有将我现在工作放到另外一个分支当中，那么我将需要做：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;还原（reset）到一个不同的commit（有可能会产生冲突）&lt;/li&gt;
  &lt;li&gt;将我做出来的所有的改变都先注释掉（这是一个非常糟糕的注意，你将会不可避免的忘记注释掉一些代码，导致程序崩溃）&lt;/li&gt;
  &lt;li&gt;删除自己做出的所有的改变（这也是一个非常糟糕的注意，因为这将会导致自己失去之前所做的所有的工作）&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;现在让我们安全的在另外一个独立的分支当中开始工作，将&lt;code class=&quot;highlighter-rouge&quot;&gt;gem&lt;/code&gt;信息添加到&lt;code class=&quot;highlighter-rouge&quot;&gt;Gemfile.rb&lt;/code&gt;当中：&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# Gemfile&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'devise'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'~&amp;gt; 3.5'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&amp;gt;= 3.5.5'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;在运行了命令&lt;code class=&quot;highlighter-rouge&quot;&gt;bundle&lt;/code&gt;之后，我们可以运行安装器：&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rails generate devise:install
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;首先让我们在&lt;code class=&quot;highlighter-rouge&quot;&gt;config/initializers/devise.rb&lt;/code&gt;中来更新默认的&lt;code class=&quot;highlighter-rouge&quot;&gt;mailer_sender&lt;/code&gt;设置，这将可以保证认证邮箱的发件人是我们而不是默认的地址。&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# config/initializers/devise.rb&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;mailer_sender&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'team@dailysmarty.com'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;现在让我们来一步一步的进行配置：&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;更新本地的邮件服务器&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# config/environments/development.rb&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;action_mailer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;default_url_options&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;host: &lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'localhost'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;port: &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3000&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;我们可以跳过对主页面的配置因为我们已经在博客&lt;a href=&quot;http://blog.gdf.name/rails-rspec-initial/&quot;&gt;Rails程序配置&lt;/a&gt;/&lt;a href=&quot;https://rails.devcamp.com/trails/professional-rails-development-course/campsites/application-build/guides/rails-app-configuration&quot;&gt;英文&lt;/a&gt;完成了这个步骤。现在让我们来添加警告&lt;code class=&quot;highlighter-rouge&quot;&gt;alerts&lt;/code&gt;的页面。我将不会把警告的页面添加到主页面当中，因为在有一些界面当中我们可能不想要实现警告的界面，或者说我们只想将警告的界面渲染到页面的特定位置。所以让我们在&lt;code class=&quot;highlighter-rouge&quot;&gt;view&lt;/code&gt;目录下创建一个&lt;code class=&quot;highlighter-rouge&quot;&gt;shared&lt;/code&gt;目录然后添加一个局部（partial）文件叫做&lt;code class=&quot;highlighter-rouge&quot;&gt;_alerts.html.erb&lt;/code&gt;：&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sx&quot;&gt;%#= app/views/shared/_alerts.html.erb %&amp;gt;

&amp;lt;p class=&quot;notice&quot;&amp;gt;&amp;lt;%= notice %&amp;gt;&amp;lt;/p&amp;gt;
&amp;lt;p class=&quot;alert&quot;&amp;gt;&amp;lt;%= alert %&amp;gt;&amp;lt;/p&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;现在让我们简单的在&lt;code class=&quot;highlighter-rouge&quot;&gt;application.html.erb&lt;/code&gt;文件中添加一个渲染的命令，我们将会在开始设计的时候将这个命令移除：&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sx&quot;&gt;%#= app/views/layouts/application.html.erb %&amp;gt;

&amp;lt;%= render 'shared/alerts' %&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;你发现了这种设计有多么干净吗？当我们在逐渐创建应用程序的过程当中，你将会发现我们会使用大量的局部（partial）文件来保持我们代码的干净和不重复（DRY）。现在让我们来使用以下的命令创建&lt;code class=&quot;highlighter-rouge&quot;&gt;Devise&lt;/code&gt;的视图（view）：&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rails g devise:views
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;这段命令将会创建以下相关的视图（view）文件：
- 注册
- 登录
- 编辑账号
- 密码重设
- 邮件模板&lt;/p&gt;

&lt;p&gt;我很喜欢&lt;code class=&quot;highlighter-rouge&quot;&gt;Devise&lt;/code&gt;生成器，然后它确实会创建一个我们并不需要的文件，现在让我们来删除掉那些我们不会使用的文件来避免程序显得很杂乱：&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rm -rf app/views/devise/confirmations
rm -rf app/views/devise/mailer/confirmation_instructions.html.erb
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;现在让我们使用&lt;code class=&quot;highlighter-rouge&quot;&gt;Devise&lt;/code&gt;生成器来创建&lt;code class=&quot;highlighter-rouge&quot;&gt;User&lt;/code&gt;模型：&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rails g devise User first_name:string last_name:string avatar:text username:string
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;这将会创建一个默认的&lt;code class=&quot;highlighter-rouge&quot;&gt;User&lt;/code&gt;模型，我在这个模型的迁移（migration）文件当中插入了一些新的属性：&lt;code class=&quot;highlighter-rouge&quot;&gt;first_name&lt;/code&gt;,&lt;code class=&quot;highlighter-rouge&quot;&gt;last_name&lt;/code&gt;,&lt;code class=&quot;highlighter-rouge&quot;&gt;avatar&lt;/code&gt;和&lt;code class=&quot;highlighter-rouge&quot;&gt;username&lt;/code&gt;。现在让我们来运行命令&lt;code class=&quot;highlighter-rouge&quot;&gt;rake db:migrate&lt;/code&gt;来在数据库中创建相应的表和&lt;code class=&quot;highlighter-rouge&quot;&gt;schema.rb&lt;/code&gt;文件：&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# db/schema.rb&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;create_table&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;users&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;force: :cascade&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;string&lt;/span&gt;   &lt;span class=&quot;s2&quot;&gt;&quot;email&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;                  &lt;span class=&quot;ss&quot;&gt;default: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;null: &lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;string&lt;/span&gt;   &lt;span class=&quot;s2&quot;&gt;&quot;encrypted_password&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;     &lt;span class=&quot;ss&quot;&gt;default: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;null: &lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;string&lt;/span&gt;   &lt;span class=&quot;s2&quot;&gt;&quot;reset_password_token&quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;datetime&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;reset_password_sent_at&quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;datetime&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;remember_created_at&quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;integer&lt;/span&gt;  &lt;span class=&quot;s2&quot;&gt;&quot;sign_in_count&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;          &lt;span class=&quot;ss&quot;&gt;default: &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;ss&quot;&gt;null: &lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;datetime&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;current_sign_in_at&quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;datetime&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;last_sign_in_at&quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;inet&lt;/span&gt;     &lt;span class=&quot;s2&quot;&gt;&quot;current_sign_in_ip&quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;inet&lt;/span&gt;     &lt;span class=&quot;s2&quot;&gt;&quot;last_sign_in_ip&quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;string&lt;/span&gt;   &lt;span class=&quot;s2&quot;&gt;&quot;first_name&quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;string&lt;/span&gt;   &lt;span class=&quot;s2&quot;&gt;&quot;last_name&quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;text&lt;/span&gt;     &lt;span class=&quot;s2&quot;&gt;&quot;avatar&quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;string&lt;/span&gt;   &lt;span class=&quot;s2&quot;&gt;&quot;username&quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;datetime&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;created_at&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;                          &lt;span class=&quot;ss&quot;&gt;null: &lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;datetime&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;updated_at&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;                          &lt;span class=&quot;ss&quot;&gt;null: &lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;add_index&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;users&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;email&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;name: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;index_users_on_email&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;unique: &lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;using: :btree&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;add_index&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;users&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;reset_password_token&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;name: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;index_users_on_reset_password_token&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;unique: &lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;using: :btree&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;以上的教程将会给我们生成足够的代码来让用户实现注册，登录和一些其他的标准的有关用户认证的操作。在下一个博客当中我们将会讲解如何&lt;a href=&quot;http://blog.gdf.name/devise-customization/&quot;&gt;自定义Devise&lt;/a&gt;。&lt;/p&gt;

&lt;h3 id=&quot;section-3&quot;&gt;资源&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/rails-camp/dailysmarty/tree/add-auth&quot;&gt;代码&lt;/a&gt;&lt;/p&gt;</content><author><name>gdf</name></author><category term="翻译" /><category term="devise" /><category term="rails" /><category term="ruby" /><summary>参考链接
原文链接</summary></entry><entry><title>从Tensorflow代码中理解LSTM网络</title><link href="http://localhost:4000/lstm-with-tensorflow/" rel="alternate" type="text/html" title="从Tensorflow代码中理解LSTM网络" /><published>2016-10-19T00:00:00-04:00</published><updated>2016-10-19T00:00:00-04:00</updated><id>http://localhost:4000/lstm-with-tensorflow</id><content type="html" xml:base="http://localhost:4000/lstm-with-tensorflow/">&lt;h1 id=&quot;section&quot;&gt;目录&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#rnn&quot;&gt;RNN&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#lstm&quot;&gt;LSTM&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;section-1&quot;&gt;参考文档与引子&lt;/h2&gt;

&lt;hr /&gt;
&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;缩略词&lt;/strong&gt;
&lt;br /&gt;
&lt;strong&gt;RNN&lt;/strong&gt; (&lt;a href=&quot;https://en.wikipedia.org/wiki/Recurrent_neural_network&quot;&gt;Recurrent neural network&lt;/a&gt;) 循环神经网络
&lt;br /&gt;
&lt;strong&gt;LSTM&lt;/strong&gt; (&lt;a href=&quot;https://en.wikipedia.org/wiki/Long_short-term_memory&quot;&gt;Long short-term memory&lt;/a&gt;) 长短期记忆人工神经网络&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;当我们在谷歌搜索LSTM这个关键字时，搜索结果的第一条就是一篇非常著名的博客 &lt;a href=&quot;http://colah.github.io/posts/2015-08-Understanding-LSTMs/&quot;&gt;Understanding LSTM Networks&lt;/a&gt; 来介绍LSTM网络，这篇博客的作者是 &lt;a href=&quot;http://colah.github.io/about.html&quot;&gt;Christopher Olah&lt;/a&gt;，在谷歌 Google Brain 工作。这篇博客的中文翻译版为 &lt;a href=&quot;http://www.jianshu.com/p/9dc9f41f0b29&quot;&gt;[译] 理解 LSTM 网络&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.tensorflow.org/&quot;&gt;Tensorflow&lt;/a&gt;是一个由谷歌开发的基于Python语言的开源机器学习库。它具有跨平台（手机／个人电脑／服务器都可使用，CPU／GPU随意切换），高效率，高度自定义化，可以充分利用计算机性能等特点，在近几年中越来越受到机器学习研究者的喜欢，许多大公司也都在使用Tensorflow，诸如 &lt;a href=&quot;http://www.arm.com/&quot;&gt;ARM&lt;/a&gt;，&lt;a href=&quot;https://www.snapchat.com/&quot;&gt;snapchat&lt;/a&gt;，&lt;a href=&quot;https://www.uber.com/&quot;&gt;Uber&lt;/a&gt;，&lt;a href=&quot;http://www.jd.com/&quot;&gt;京东&lt;/a&gt; 等。&lt;/p&gt;

&lt;p&gt;在本篇博客中，我将尝试通过解释Tensorflow中&lt;a href=&quot;https://www.tensorflow.org/versions/r0.11/tutorials/recurrent/index.html&quot;&gt;RNN/LSTM&lt;/a&gt;部分的&lt;a href=&quot;https://github.com/tensorflow/tensorflow/tree/master/tensorflow/models/rnn/ptb&quot;&gt;源码&lt;/a&gt;来帮助大家深入理解LSTM网络的运作，同时也是为了来帮助我自己更好的理解LSTM网络。这是本人尝试写的第一篇博客，欢迎大家来加来指正文中的错误或者不合理之处，也欢迎提出各种各样的建议或意见。谢谢！&lt;/p&gt;

&lt;h2 id=&quot;lstmrnn&quot;&gt;LSTM与RNN的关系&lt;/h2&gt;

&lt;hr /&gt;
&lt;blockquote&gt;
  &lt;p&gt;有一篇非常有名的博客&lt;a href=&quot;http://karpathy.github.io/2015/05/21/rnn-effectiveness/&quot;&gt;The Unreasonable Effectiveness of Recurrent Neural Networks&lt;/a&gt; 详细介绍了什么是RNN并且作者开源一个&lt;a href=&quot;https://github.com/karpathy/char-rnn&quot;&gt;基于LSTM的多层RNN神经网络项目&lt;/a&gt;(使用了Torch)，强烈建议没有看过的人或者对于RNN概念不是非常清楚的人进来看看。这篇博客还有中文翻译版本：&lt;a href=&quot;https://zhuanlan.zhihu.com/p/22107715&quot;&gt;链接&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;LSTM从本质上来说并不是一个完整的神经网络模型，它其实是对RNN神经网络中的神经元／隐含单元（CELL／Hidden unit）的一种变形与改进。在这种改变当中，LSTM在神经元中加入了一个状态（State）的概念用来储存长期的记忆（具体LSTM结构将会在博客的后面有介绍）。在很多网上面介绍LSTM的教程或者博客当中，他们其实都只给了LSTM神经元的结构，这是属于RNN框架中的一部分。所以说如果想要理解LSTM我们首先需要理解什么是RNN。&lt;/p&gt;

&lt;h3 id=&quot;rnn&quot;&gt;RNN&lt;/h3&gt;

&lt;hr /&gt;
&lt;blockquote&gt;
  &lt;p&gt;本篇博客的主要目的是在于将Tensorflow中的代码与LSTM和RNN的理论公式对接起来。让大家可以更容易的使用Tensorflow来开发属于自己的神经网络，或者让大家可以对LSTM与RNN有一个更加直观的从代码方面的理解。所以说本博客假设读者已经对LSTM与RNN有一定的了解，我将会直接从图片开始来解读RNN和LSTM。对于那些对RNN和LSTM没有概念的人，我建议可以从参考文档中的那篇&lt;a href=&quot;http://colah.github.io/posts/2015-08-Understanding-LSTMs/&quot;&gt;博客&lt;/a&gt;开始读起。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;首先让我们从全局查看RNN神经网络是如何运作的&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/posts/rnn_flow.png&quot; alt=&quot;RNN 网络&quot; /&gt;&lt;/p&gt;
&lt;figcaption class=&quot;caption&quot;&gt;RNN 网络&lt;/figcaption&gt;

&lt;p&gt;图中的 &lt;script type=&quot;math/tex&quot;&gt;x&lt;/script&gt; 代表的是输入， &lt;script type=&quot;math/tex&quot;&gt;z&lt;/script&gt; 代表的是输出，&lt;script type=&quot;math/tex&quot;&gt;t&lt;/script&gt; 代表的是一段序列中任意的一个时间，&lt;script type=&quot;math/tex&quot;&gt;n&lt;/script&gt; 代表的是当前序列的总长度。&lt;/p&gt;

&lt;p&gt;下面让我们取上图中最中间的神经元为例来分析普通RNN神经元中的运作方式：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/posts/rnn_cell.png&quot; alt=&quot;RNN 神经元／隐含单元（CELL / Hidden unit）&quot; /&gt;&lt;/p&gt;
&lt;figcaption class=&quot;caption&quot;&gt;RNN 神经元／隐含单元（CELL / Hidden unit）&lt;/figcaption&gt;

&lt;p&gt;图中的 &lt;script type=&quot;math/tex&quot;&gt;x_t&lt;/script&gt; 代表的是当前时间片段的输入， &lt;script type=&quot;math/tex&quot;&gt;z_t&lt;/script&gt; 代表的是当前时间片段的输出，&lt;script type=&quot;math/tex&quot;&gt;h_{t-1}&lt;/script&gt; 代表的是上一个时间片段的隐含状态输出，&lt;script type=&quot;math/tex&quot;&gt;h_t&lt;/script&gt; 代表的是当前时间片段的隐含状态输出。中间的两个圆圈里的 &lt;script type=&quot;math/tex&quot;&gt;f&lt;/script&gt; 代表的意思为一个非线性的点乘操作（element-wise non-linearity），可以为一个&lt;a href=&quot;https://en.wikipedia.org/wiki/Sigmoid_function&quot;&gt;sigmoid&lt;/a&gt;操作或者是一个&lt;a href=&quot;http://mathworld.wolfram.com/HyperbolicTangent.html&quot;&gt;hyperbolic tangent&lt;/a&gt;的操作。&lt;/p&gt;

&lt;h4 id=&quot;section-2&quot;&gt;基础等式&lt;/h4&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;h_t=f(W_{xh}x_t+W_{hh}h_{t-1}+b_h)&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;z_t=f(W_{hz}h_t+b_z)&lt;/script&gt;

&lt;h4 id=&quot;tensorflowgithubhttpsgithubcomtensorflowtensorflowblobmastertensorflowpythonopsrnncellpyl180-l201&quot;&gt;对应的Tensorflow代码（&lt;a href=&quot;https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/ops/rnn_cell.py#L180-L201&quot;&gt;Github&lt;/a&gt;）&lt;/h4&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;__call__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;inputs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;scope&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot;Most basic RNN: output = new_state = activation(W * input + U * state + B).&quot;&quot;&quot;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;vs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;variable_scope&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;scope&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__name__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;# &quot;BasicRNNCell&quot;&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;output&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_activation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_linear&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;inputs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_num_units&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;output&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;output&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;上述代码块对应的就是一个普通RNN神经元中的操作&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot;Most basic RNN: output = new_state = activation(W * input + U * state + B).&quot;&quot;&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;下面是上述代码中的变量与基础等式中的变量的对应表&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;代码变量&lt;/td&gt;
      &lt;td&gt;基础等式变量&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;new_state&lt;/td&gt;
      &lt;td&gt;&lt;script type=&quot;math/tex&quot;&gt;h_t&lt;/script&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;W&lt;/td&gt;
      &lt;td&gt;&lt;script type=&quot;math/tex&quot;&gt;W_{xh}&lt;/script&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;input&lt;/td&gt;
      &lt;td&gt;&lt;script type=&quot;math/tex&quot;&gt;x_t&lt;/script&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;U&lt;/td&gt;
      &lt;td&gt;&lt;script type=&quot;math/tex&quot;&gt;W_{hh}&lt;/script&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;state&lt;/td&gt;
      &lt;td&gt;&lt;script type=&quot;math/tex&quot;&gt;h_{t-1}&lt;/script&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;B&lt;/td&gt;
      &lt;td&gt;&lt;script type=&quot;math/tex&quot;&gt;b_h&lt;/script&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;output&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_activation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_linear&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;inputs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_num_units&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;下面是上述代码对应的解释&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;代码&lt;/td&gt;
      &lt;td&gt;解释&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;self._activation()&lt;/td&gt;
      &lt;td&gt;激活函数，等同于基础等式中的 &lt;script type=&quot;math/tex&quot;&gt;f&lt;/script&gt; 操作，在tensorflow的代码当中使用的是tanh的激活函数&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/ops/rnn_cell.py#L867-L917&quot;&gt;_linear()&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;将传入的参数进行一个线性叠加的步骤 &lt;br /&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;_linear([a,b], num_units, True)&lt;/code&gt; = &lt;script type=&quot;math/tex&quot;&gt;Wa+Ub+B&lt;/script&gt; &lt;br /&gt; = &lt;script type=&quot;math/tex&quot;&gt;W_{a_1}a_1+W_{a_2}a_2 + ... + W_{a_n}a_n + U_{b_1}b_1 + U_{b_2}b_2 + ... + U_{b_n}b_n&lt;/script&gt; &lt;br /&gt;&lt;br /&gt;我们首先假设我们数据&lt;br /&gt;&lt;strong&gt;批尺寸&lt;/strong&gt;（batch size） = 10 &lt;br /&gt; &lt;strong&gt;输入数据大小&lt;/strong&gt;（input size）= 300&lt;br /&gt;&lt;strong&gt;隐含单元数&lt;/strong&gt;（number of unit）= 200&lt;br /&gt;那么&lt;br /&gt;&lt;script type=&quot;math/tex&quot;&gt;W&lt;/script&gt; 的大小为&lt;code class=&quot;highlighter-rouge&quot;&gt;[输入数据大小(input size)300, 单元数(number of unit)200]&lt;/code&gt;&lt;br /&gt;&lt;script type=&quot;math/tex&quot;&gt;U&lt;/script&gt; 的大小为&lt;code class=&quot;highlighter-rouge&quot;&gt;[隐含单元数(number of unit)200，隐含单元数(number of unit)200]&lt;/code&gt;&lt;br /&gt; &lt;script type=&quot;math/tex&quot;&gt;a&lt;/script&gt; 的大小为&lt;code class=&quot;highlighter-rouge&quot;&gt;[批尺寸大小(batch size)10, 输入数据大小(input size)300]&lt;/code&gt;&lt;br /&gt;&lt;script type=&quot;math/tex&quot;&gt;b&lt;/script&gt; 的大小为&lt;code class=&quot;highlighter-rouge&quot;&gt;[批尺寸大小(batch size)10, 隐含单元数(number of unit)200]&lt;/code&gt;&lt;br /&gt;&lt;script type=&quot;math/tex&quot;&gt;B&lt;/script&gt; 的大小为&lt;code class=&quot;highlighter-rouge&quot;&gt;[隐含单元数(number of unit)200]&lt;/code&gt;&lt;br /&gt; （&lt;strong&gt;注意&lt;/strong&gt;：在tensorflow代码当中，实际上tensorflow做的操作是 &lt;script type=&quot;math/tex&quot;&gt;a*W+b*U+B&lt;/script&gt;。你会发现当完成操作 &lt;script type=&quot;math/tex&quot;&gt;a*W+b*U&lt;/script&gt; 时，矩阵的大小是&lt;code class=&quot;highlighter-rouge&quot;&gt;[批尺寸大小(batch size)10, 隐含单元数(number of unit)200]&lt;/code&gt;，但是 &lt;script type=&quot;math/tex&quot;&gt;B&lt;/script&gt; 的大小却为&lt;code class=&quot;highlighter-rouge&quot;&gt;[隐含单元数(number of unit)200]&lt;/code&gt;，他们的大小无法匹配，但是tensorflow却可以把他们相加，这是因为tensorflow只是使用同样的 &lt;script type=&quot;math/tex&quot;&gt;B&lt;/script&gt; 与矩阵中的隐含单元数相加。比如 &lt;code class=&quot;highlighter-rouge&quot;&gt;[[1,2],[3,4]] + [1,1] = [[2,3],[4,5]]&lt;/code&gt;。）&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;inputs&lt;br /&gt;state&lt;/td&gt;
      &lt;td&gt;这里的inputs就等同于上面解释的 &lt;script type=&quot;math/tex&quot;&gt;a&lt;/script&gt;, 这里的state就等同于上面解释的 &lt;script type=&quot;math/tex&quot;&gt;b&lt;/script&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;True&lt;/td&gt;
      &lt;td&gt;加入偏移（bias） &lt;script type=&quot;math/tex&quot;&gt;B&lt;/script&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;lstm&quot;&gt;LSTM&lt;/h3&gt;

&lt;hr /&gt;
&lt;p&gt;下面让我们看一看LSTM，首先我们来看一下LSTM神经元的内部结构：
&lt;img src=&quot;/assets/images/posts/lstm_cell.png&quot; alt=&quot;LSTM 神经元／隐含单元（CELL / Hidden unit）&quot; /&gt;&lt;/p&gt;
&lt;figcaption class=&quot;caption&quot;&gt;LSTM 神经元／隐含单元（CELL / Hidden unit）&lt;/figcaption&gt;

&lt;p&gt;与RNN一样，图中的 &lt;script type=&quot;math/tex&quot;&gt;x_t&lt;/script&gt; 代表的是当前时间片段的输入， &lt;script type=&quot;math/tex&quot;&gt;z_t&lt;/script&gt; 代表的是当前时间片段的输出，&lt;script type=&quot;math/tex&quot;&gt;h_{t-1}&lt;/script&gt; 代表的是上一个时间片段的隐含状态输出，&lt;script type=&quot;math/tex&quot;&gt;h_t&lt;/script&gt; 代表的是当前时间片段的隐含状态输出。LSTM相较于RNN一个主要的区别在于LSTM添加了一个新的记忆单元 &lt;script type=&quot;math/tex&quot;&gt;C&lt;/script&gt; ，图中的 &lt;script type=&quot;math/tex&quot;&gt;C_{t-1}&lt;/script&gt;代表的是上一个时间片段的（旧）记忆单元，&lt;script type=&quot;math/tex&quot;&gt;C_t&lt;/script&gt; 代表的则是当前时间片段的（新）记忆单元。图中的&lt;script type=&quot;math/tex&quot;&gt;\bigotimes&lt;/script&gt;符号代表的意思是两个向量之间的点乘，图中的&lt;script type=&quot;math/tex&quot;&gt;\bigoplus&lt;/script&gt;符号代表的意思则是两个向量之间的相加。图中圆圈里的 &lt;script type=&quot;math/tex&quot;&gt;\sigma&lt;/script&gt; 代表的意思为为一个&lt;a href=&quot;https://en.wikipedia.org/wiki/Sigmoid_function&quot;&gt;sigmoid&lt;/a&gt;操作，图中圆圈里的 &lt;script type=&quot;math/tex&quot;&gt;tanh&lt;/script&gt; 则是是一个&lt;a href=&quot;http://mathworld.wolfram.com/HyperbolicTangent.html&quot;&gt;hyperbolic tangent&lt;/a&gt;的操作。&lt;/p&gt;

&lt;h4 id=&quot;section-3&quot;&gt;基础等式&lt;/h4&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;Input Gate : i_t = \sigma(W_{xi}x_t+W_{hi}h_{t-1}+b_i)&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;Forget Gate : f_t = \sigma(W_{xf}x_t+W_{hf}h_{t-1}+b_f)&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;Output Gate : o_t = \sigma(W_{xo}x_t+W_{ho}h_{t-1}+b_o)&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;Input Modulation Gate : g_t = tanh(W_{xc}x_t+W_{hc}h_{t-1}+b_c)&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;c_t = f_t\otimes c_{t-1}+i_t\otimes g_t&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;h_t = o_t\otimes tanh(c_t)&lt;/script&gt;

&lt;h4 id=&quot;tensorflowgithubhttpsgithubcomtensorflowtensorflowblobmastertensorflowpythonopsrnncellpyl257-l324&quot;&gt;对应的Tensorflow代码（&lt;a href=&quot;https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/ops/rnn_cell.py#L257-L324&quot;&gt;Github&lt;/a&gt;)&lt;/h4&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;__call__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;inputs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;scope&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot;Long short-term memory cell (LSTM).&quot;&quot;&quot;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;vs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;variable_scope&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;scope&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__name__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;# &quot;BasicLSTMCell&quot;&lt;/span&gt;
      &lt;span class=&quot;c&quot;&gt;# Parameters of gates are concatenated into one multiply for efficiency.&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_state_is_tuple&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;h&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;state&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;h&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;array_ops&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;concat&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_linear&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;inputs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_num_units&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

      &lt;span class=&quot;c&quot;&gt;# i = input_gate, j = new_input, f = forget_gate, o = output_gate&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;o&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;array_ops&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;concat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

      &lt;span class=&quot;n&quot;&gt;new_c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sigmoid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_forget_bias&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sigmoid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;
               &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_activation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;new_h&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_activation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new_c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sigmoid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_state_is_tuple&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;new_state&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LSTMStateTuple&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new_c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;new_h&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;new_state&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;array_ops&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;concat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new_c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;new_h&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;new_h&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;new_state&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;下面列表是上面代码中的变量的大小与解释&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;变量名&lt;/td&gt;
      &lt;td&gt;对应的基础等式变量&lt;/td&gt;
      &lt;td&gt;大小（shape）&lt;/td&gt;
      &lt;td&gt;解释&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;inputs&lt;/td&gt;
      &lt;td&gt;&lt;script type=&quot;math/tex&quot;&gt;x_t&lt;/script&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;[批尺寸大小(batch size), 输入数据大小(input size)]&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;输入的数据（&lt;script type=&quot;math/tex&quot;&gt;x_t&lt;/script&gt;）&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;state&lt;/td&gt;
      &lt;td&gt;&lt;script type=&quot;math/tex&quot;&gt;(c_{t-1},h_)&lt;/script&gt;&lt;/td&gt;
      &lt;td&gt;(&lt;code class=&quot;highlighter-rouge&quot;&gt;[批尺寸大小(batch size), 隐含单元数(number of unit)]&lt;/code&gt;,&lt;br /&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;[批尺寸大小(batch size), 隐含单元数(number of unit)]&lt;/code&gt;)&lt;/td&gt;
      &lt;td&gt;这个一个tuple数据类型，储存了上一个时间段也就是旧的记忆单元（&lt;script type=&quot;math/tex&quot;&gt;c_{t-1}&lt;/script&gt;）和隐含状态（&lt;script type=&quot;math/tex&quot;&gt;h_{t-1}&lt;/script&gt;）&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;c&lt;/td&gt;
      &lt;td&gt;&lt;script type=&quot;math/tex&quot;&gt;c_{t-1}&lt;/script&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;[批尺寸大小(batch size), 隐含单元数(number of unit)]&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;旧的记忆单元（&lt;script type=&quot;math/tex&quot;&gt;c_{t-1}&lt;/script&gt;）&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;h&lt;/td&gt;
      &lt;td&gt;&lt;script type=&quot;math/tex&quot;&gt;h_{t-1}&lt;/script&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;[批尺寸大小(batch size), 隐含单元数(number of unit)]&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;旧的隐含状态（&lt;script type=&quot;math/tex&quot;&gt;h_{t-1}&lt;/script&gt;）&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;i&lt;/td&gt;
      &lt;td&gt;&lt;script type=&quot;math/tex&quot;&gt;W_{xi}x_t+W_{hi}h_{t-1}+b_i&lt;/script&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;[批尺寸大小(batch size), 隐含单元数(number of unit)]&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Input Gate&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;j&lt;/td&gt;
      &lt;td&gt;&lt;script type=&quot;math/tex&quot;&gt;W_{xc}x_t+W_{hc}h_{t-1}+b_c&lt;/script&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;[批尺寸大小(batch size), 隐含单元数(number of unit)]&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Input Modulation Gate 也就是代码解释中的new_input&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;f&lt;/td&gt;
      &lt;td&gt;&lt;script type=&quot;math/tex&quot;&gt;W_{xf}x_t+W_{hf}h_{t-1}+b_f&lt;/script&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;[批尺寸大小(batch size), 隐含单元数(number of unit)]&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Forget Gate&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;o&lt;/td&gt;
      &lt;td&gt;&lt;script type=&quot;math/tex&quot;&gt;W_{xo}x_t+W_{ho}h_{t-1}+b_o&lt;/script&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;[批尺寸大小(batch size), 隐含单元数(number of unit)]&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Output Gate&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;new_c&lt;/td&gt;
      &lt;td&gt;&lt;script type=&quot;math/tex&quot;&gt;c_t&lt;/script&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;[批尺寸大小(batch size), 隐含单元数(number of unit)]&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;新的记忆单元（&lt;script type=&quot;math/tex&quot;&gt;c_t&lt;/script&gt;）&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;new_h&lt;/td&gt;
      &lt;td&gt;&lt;script type=&quot;math/tex&quot;&gt;h_t&lt;/script&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;[批尺寸大小(batch size), 隐含单元数(number of unit)]&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;新的隐含状态（&lt;script type=&quot;math/tex&quot;&gt;h_t&lt;/script&gt;）&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;concat&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_linear&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;inputs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_num_units&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;上述代码的&lt;code class=&quot;highlighter-rouge&quot;&gt;_linear&lt;/code&gt;函数与之前RNN代码中的&lt;code class=&quot;highlighter-rouge&quot;&gt;_linear&lt;/code&gt;函数一样。在函数里面，tensorflow会自动创建基础等式中相应的&lt;script type=&quot;math/tex&quot;&gt;W_{xi}, W_{hi}, b_i, W_{xf}, W_{hf}, b_f, W_{xo}, W_{ho}, b_o, W_{xc}, W_{hc}, b_c&lt;/script&gt; 变量并初始化，在之后的过程当中，这些变量会随着输入的值的更新而不断的变化。
&lt;code class=&quot;highlighter-rouge&quot;&gt;python
i, j, f, o = array_ops.split(1, 4, concat)
&lt;/code&gt;
由于在上面的&lt;code class=&quot;highlighter-rouge&quot;&gt;_linear&lt;/code&gt;函数中，tensorflow将&lt;strong&gt;input gate, input modulation gate, forget gate和output gate&lt;/strong&gt;串联到了一起，并且他们的大小都是一致的为&lt;code class=&quot;highlighter-rouge&quot;&gt;[批尺寸大小(batch size), 隐含单元数(number of unit)]&lt;/code&gt;。所以在这个步骤当中，tensorflow通过切割数组单独获取了&lt;strong&gt;input gate, input modulation gate, forget gate和output gate&lt;/strong&gt;的值。
&lt;code class=&quot;highlighter-rouge&quot;&gt;python
new_c = (c * sigmoid(f + self._forget_bias) + sigmoid(i) *
               self._activation(j))
&lt;/code&gt;
这一段代码对应的正是基础等式中的等式&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;f_t = \sigma(W_{xf}x_t+W_{hf}h_{t-1}+b_f)&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;g_t = tanh(W_{xc}x_t+W_{hc}h_{t-1}+b_c)&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;c_t = f_t\otimes c_{t-1}+i_t\otimes g_t&lt;/script&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;new_h&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_activation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new_c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sigmoid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;这一段代码对应的则是基础等式中的
&lt;script type=&quot;math/tex&quot;&gt;h_t = o_t\otimes tanh(c_t)&lt;/script&gt;
最后tensorflow将新的隐含状态 &lt;script type=&quot;math/tex&quot;&gt;h_t&lt;/script&gt; 返回，并将新的隐含状态和新的记忆单元串联起来之后返回。&lt;/p&gt;

&lt;h2 id=&quot;section-4&quot;&gt;结束语&lt;/h2&gt;

&lt;hr /&gt;
&lt;p&gt;至此我们应该对LSTM有了一定程度上的理解，欢迎读者们在下方评论区留言发表修改意见。谢谢！&lt;/p&gt;</content><author><name>gdf</name></author><category term="lstm" /><category term="rnn" /><category term="tensorflow" /><category term="python" /><summary>目录</summary></entry><entry><title>【译】Rails测试：如何给Rails项目初始化Rspec</title><link href="http://localhost:4000/rails-rspec-initial/" rel="alternate" type="text/html" title="【译】Rails测试：如何给Rails项目初始化Rspec" /><published>2016-10-12T00:00:00-04:00</published><updated>2016-10-12T00:00:00-04:00</updated><id>http://localhost:4000/rails-rspec-initial</id><content type="html" xml:base="http://localhost:4000/rails-rspec-initial/">&lt;h2 id=&quot;section&quot;&gt;参考链接&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://rails.devcamp.com/professional-rails-development-course/application-build/rails-app-configuration&quot;&gt;link&lt;/a&gt;（本文为参考链接的非官方中文翻译版本，并非完全对照翻译，减少了原文中不必要的内容）&lt;/p&gt;

&lt;h2 id=&quot;section-1&quot;&gt;说明&lt;/h2&gt;
&lt;p&gt;这片文章将会一步一步来教大家如何初始化rspec将rspec集成到Rails的项目当中&lt;/p&gt;

&lt;h2 id=&quot;section-2&quot;&gt;文章正文：&lt;/h2&gt;
&lt;p&gt;要想充分的使用rspec，除了主要的 &lt;code class=&quot;highlighter-rouge&quot;&gt;rspec-rails&lt;/code&gt; gem，我们还需要使用到以下三个gems：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Capybara&lt;/code&gt; － 这个gem主要是用来写集成测试（integration tests），它可以模拟用户的行为来自动点击浏览器中的链接，填写浏览器中的表格等功能。&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Database Cleaner&lt;/code&gt; －这个gem可以自动清除我们的test数据库，来避免一些来自rspec可能的潜在错误，例如我们想要创建唯一性的数据时，因为数据库中已经存在了相应的数据，导致该数据无法创建。&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Factory Girl&lt;/code&gt; －用户创建sample数据，便于我们在rspec的测试中使用它们&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;首先让我们把相应的gem添加到&lt;code class=&quot;highlighter-rouge&quot;&gt;Gemfile&lt;/code&gt;当中（因为上述的四个gems全部都是用于测试，所以我们可以把gems添加到 &lt;code class=&quot;highlighter-rouge&quot;&gt;:development&lt;/code&gt; 和 &lt;code class=&quot;highlighter-rouge&quot;&gt;:test&lt;/code&gt; 的组当中），参考一下的&lt;code class=&quot;highlighter-rouge&quot;&gt;Gemfile&lt;/code&gt;文件：&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# Gemfile&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;source&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'https://rubygems.org'&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'rails'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'4.2.5'&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'pg'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'~&amp;gt; 0.15'&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'sass-rails'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'~&amp;gt; 5.0'&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'uglifier'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&amp;gt;= 1.3.0'&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'coffee-rails'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'~&amp;gt; 4.1.0'&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'jquery-rails'&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'turbolinks'&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'jbuilder'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'~&amp;gt; 2.0'&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'sdoc'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'~&amp;gt; 0.4.0'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;group: :doc&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;group&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:development&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:test&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'byebug'&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'rspec-rails'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'~&amp;gt; 3.0'&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'capybara'&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'database_cleaner'&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;group&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:development&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'web-console'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'~&amp;gt; 2.0'&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'spring'&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;参考 &lt;code class=&quot;highlighter-rouge&quot;&gt;:development&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;:test&lt;/code&gt; 模块&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'rspec-rails'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'~&amp;gt; 3.0'&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'capybara'&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'database_cleaner'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;通过运行命令 &lt;code class=&quot;highlighter-rouge&quot;&gt;bundle&lt;/code&gt; 安装需要的gem之后，我们使用rspec的命令来安装 &lt;code class=&quot;highlighter-rouge&quot;&gt;RSpec&lt;/code&gt; 。&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rails generate rspec:install
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;这个命令将会创建相应的rspec配置文件&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;create&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;rspec&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;create&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;spec&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;spec_helper&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;rb&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;create&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;spec&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rails_helper&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;rb&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;下一步我们将需要配置 &lt;code class=&quot;highlighter-rouge&quot;&gt;rails_helper.rb&lt;/code&gt; 文件来使 &lt;code class=&quot;highlighter-rouge&quot;&gt;capybara&lt;/code&gt; 和 &lt;code class=&quot;highlighter-rouge&quot;&gt;DatabaseCleaner&lt;/code&gt; 运作：&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# spec/rails_helper.rb&lt;/span&gt;

&lt;span class=&quot;no&quot;&gt;ENV&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'RAILS_ENV'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'test'&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;expand_path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'../../config/environment'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;__FILE__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;abort&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;The Rails environment is running in production mode!&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Rails&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;production?&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'spec_helper'&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'rspec/rails'&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'capybara/rails'&lt;/span&gt;

&lt;span class=&quot;no&quot;&gt;ActiveRecord&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Migration&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;maintain_test_schema!&lt;/span&gt;

&lt;span class=&quot;no&quot;&gt;RSpec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;configure&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;fixture_path&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Rails&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;root&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/spec/fixtures&quot;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;use_transactional_fixtures&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;before&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:suite&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;DatabaseCleaner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;clean_with&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:truncation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;before&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:each&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;DatabaseCleaner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;strategy&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:transaction&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;before&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:each&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:js&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;DatabaseCleaner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;strategy&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:truncation&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;before&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:each&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;DatabaseCleaner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;start&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;after&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:each&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;DatabaseCleaner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;clean&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;infer_spec_type_from_file_location!&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;filter_rails_from_backtrace!&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;以上的配置文件对比默认的配置文件作出了一下的修改：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;添加了 &lt;code class=&quot;highlighter-rouge&quot;&gt;capybara/rails&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;将 &lt;code class=&quot;highlighter-rouge&quot;&gt;use_transactional_fixtures&lt;/code&gt; 改变为 &lt;code class=&quot;highlighter-rouge&quot;&gt;false&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;添加了一些 &lt;code class=&quot;highlighter-rouge&quot;&gt;DatabaseCleaner&lt;/code&gt; 的配置&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;至此我们已经完成了相应的配置，下面让我们写一个测试文件来测试我们可以访问主页。创建一个目录 &lt;code class=&quot;highlighter-rouge&quot;&gt;features&lt;/code&gt; 和文件 &lt;code class=&quot;highlighter-rouge&quot;&gt;static&lt;/code&gt; ：&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# spec/features/static_spec.rb&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'rails_helper'&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;describe&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'navigate'&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;describe&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'homepage'&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;it&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'can be reached successfully'&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;visit&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;root_path&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;page&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;status_code&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;eq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;运行命令 &lt;code class=&quot;highlighter-rouge&quot;&gt;rspec&lt;/code&gt; 将会出现错误 &lt;code class=&quot;highlighter-rouge&quot;&gt;NameError: undefined local variable or method root_path' for #RSpec::ExampleGroups::Navigate::Homepage:0x007fa73f05eef0&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/posts/rails-rspec-1.png&quot; alt=&quot;Alt Text&quot; /&gt;&lt;/p&gt;

&lt;p&gt;我们可以通过修改 &lt;code class=&quot;highlighter-rouge&quot;&gt;routes.rb&lt;/code&gt; 文件来修复这个错误：&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# config/routes.rb&lt;/span&gt;

&lt;span class=&quot;no&quot;&gt;Rails&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;application&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;routes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;draw&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;root&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;to: &lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'static#home'&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;再次运行 &lt;code class=&quot;highlighter-rouge&quot;&gt;rspec&lt;/code&gt; 命令，我们将会遇到另外一个错误因为我们没有创建 &lt;code class=&quot;highlighter-rouge&quot;&gt;static&lt;/code&gt; 控制器（controller），然后错误提示还是会说无法识别 &lt;code class=&quot;highlighter-rouge&quot;&gt;root_path&lt;/code&gt;，所以让我们手动创建 &lt;code class=&quot;highlighter-rouge&quot;&gt;static&lt;/code&gt; 控制器：&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# app/controllers/static_controller.rb&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;StaticController&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ApplicationController&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;现在我们再次运行 &lt;code class=&quot;highlighter-rouge&quot;&gt;rspec&lt;/code&gt; 命令，我们将会获得另外一个错误消息就是 &lt;code class=&quot;highlighter-rouge&quot;&gt;AbstractController::ActionNotFound: The action 'home' could not be found for StaticController&lt;/code&gt; ：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/posts/rails-rspec-2.png&quot; alt=&quot;Alt Text&quot; /&gt;&lt;/p&gt;

&lt;p&gt;我们可以通过给添加 &lt;code class=&quot;highlighter-rouge&quot;&gt;home&lt;/code&gt; index：&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# app/controllers/static_controller.rb&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;StaticController&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ApplicationController&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;home&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;当我们再次运行 &lt;code class=&quot;highlighter-rouge&quot;&gt;rspec&lt;/code&gt; 命令， 我们将会遇到错误 &lt;code class=&quot;highlighter-rouge&quot;&gt;ActionView::MissingTemplate: Missing template static/home&lt;/code&gt; 这是因为我们没有创建模板文件，现在让我们在 &lt;code class=&quot;highlighter-rouge&quot;&gt;app/views/static&lt;/code&gt; 目录下创建文件 &lt;code class=&quot;highlighter-rouge&quot;&gt;app/views/static/home.html.erb&lt;/code&gt; 。&lt;/p&gt;

&lt;p&gt;现在当我们运行命令 &lt;code class=&quot;highlighter-rouge&quot;&gt;rspec&lt;/code&gt; 时，测试通过：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/posts/rails-rspec-3.png&quot; alt=&quot;Alt Text&quot; /&gt;&lt;/p&gt;

&lt;p&gt;在测试文件 &lt;code class=&quot;highlighter-rouge&quot;&gt;spec/features/static_spec.rb&lt;/code&gt; 中&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Capybara&lt;/code&gt; 将会开启一个虚拟的浏览器会话&lt;/li&gt;
  &lt;li&gt;它将会访问地址 &lt;code class=&quot;highlighter-rouge&quot;&gt;root_path&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;并察看相应的页面是否返回 &lt;code class=&quot;highlighter-rouge&quot;&gt;HTTP&lt;/code&gt; 状态码 &lt;code class=&quot;highlighter-rouge&quot;&gt;200&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;至此改教程结束&lt;/p&gt;</content><author><name>gdf</name></author><category term="翻译" /><category term="rails" /><category term="rspec" /><summary>参考链接</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/images/markdown.jpg" /></entry></feed>
